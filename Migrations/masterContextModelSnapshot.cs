// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeOffTracker.Model;

namespace TimeOffTracker.Migrations
{
    [DbContext(typeof(masterContext))]
    partial class masterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeOffTracker.Model.ProjectRoleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comments");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("Project_role_type_pk")
                        .IsClustered(false);

                    b.ToTable("Project_role_type", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeFrom")
                        .HasColumnType("datetime")
                        .HasColumnName("date_time_from");

                    b.Property<DateTime>("DateTimeTo")
                        .HasColumnType("datetime")
                        .HasColumnName("date_time_to");

                    b.Property<string>("ProjectRoleComment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("project_role_comment");

                    b.Property<int>("ProjectRoleTypeId")
                        .HasColumnType("int")
                        .HasColumnName("project_role_type_id");

                    b.Property<string>("Reason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("reason");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int")
                        .HasColumnName("request_type_id");

                    b.Property<int>("StateDetailId")
                        .HasColumnType("int")
                        .HasColumnName("state_detail_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("Request_pk")
                        .IsClustered(false);

                    b.HasIndex("ProjectRoleTypeId");

                    b.HasIndex("RequestTypeId");

                    b.HasIndex("StateDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Request", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comments");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("Request_type_pk")
                        .IsClustered(false);

                    b.ToTable("Request_type", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.StateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comments");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("State_detail_pk")
                        .IsClustered(false);

                    b.ToTable("State_detail", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("SecondName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("second_name");

                    b.HasKey("Id")
                        .HasName("User_pk")
                        .IsClustered(false);

                    b.HasIndex("RoleId");

                    b.ToTable("User", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comments");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("User_Role_pk")
                        .IsClustered(false);

                    b.ToTable("User_Role", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.UserSignature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit")
                        .HasColumnName("approved");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<int>("NInQueue")
                        .HasColumnType("int")
                        .HasColumnName("N_in_queue");

                    b.Property<int>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("request_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("User_Signature_pk")
                        .IsClustered(false);

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Signature", "_public");
                });

            modelBuilder.Entity("TimeOffTracker.Model.Request", b =>
                {
                    b.HasOne("TimeOffTracker.Model.ProjectRoleType", "ProjectRoleType")
                        .WithMany("Requests")
                        .HasForeignKey("ProjectRoleTypeId")
                        .HasConstraintName("Request_Project_role_type_id_fk")
                        .IsRequired();

                    b.HasOne("TimeOffTracker.Model.RequestType", "RequestType")
                        .WithMany("Requests")
                        .HasForeignKey("RequestTypeId")
                        .HasConstraintName("Request_Request_type_id_fk")
                        .IsRequired();

                    b.HasOne("TimeOffTracker.Model.StateDetail", "StateDetail")
                        .WithMany("Requests")
                        .HasForeignKey("StateDetailId")
                        .HasConstraintName("Request_State_detail_id_fk")
                        .IsRequired();

                    b.HasOne("TimeOffTracker.Model.User", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Request_User_id_fk")
                        .IsRequired();

                    b.Navigation("ProjectRoleType");

                    b.Navigation("RequestType");

                    b.Navigation("StateDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeOffTracker.Model.User", b =>
                {
                    b.HasOne("TimeOffTracker.Model.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("User_User_Role_id_fk")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TimeOffTracker.Model.UserSignature", b =>
                {
                    b.HasOne("TimeOffTracker.Model.Request", "Request")
                        .WithMany("UserSignatures")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("User_Signature_Request_id_fk")
                        .IsRequired();

                    b.HasOne("TimeOffTracker.Model.User", "User")
                        .WithMany("UserSignatures")
                        .HasForeignKey("UserId")
                        .HasConstraintName("User_Signature_User_id_fk")
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeOffTracker.Model.ProjectRoleType", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TimeOffTracker.Model.Request", b =>
                {
                    b.Navigation("UserSignatures");
                });

            modelBuilder.Entity("TimeOffTracker.Model.RequestType", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TimeOffTracker.Model.StateDetail", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("TimeOffTracker.Model.User", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("UserSignatures");
                });

            modelBuilder.Entity("TimeOffTracker.Model.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
